// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: snakes.proto
package dto;

public interface GameMessageOrBuilder extends
    // @@protoc_insertion_point(interface_extends:snakes.GameMessage)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>required int64 msg_seq = 1;</code>
   */
  boolean hasMsgSeq();
  /**
   * <code>required int64 msg_seq = 1;</code>
   */
  long getMsgSeq();

  /**
   * <code>optional int32 sender_id = 10;</code>
   */
  boolean hasSenderId();
  /**
   * <code>optional int32 sender_id = 10;</code>
   */
  int getSenderId();

  /**
   * <code>optional int32 receiver_id = 11;</code>
   */
  boolean hasReceiverId();
  /**
   * <code>optional int32 receiver_id = 11;</code>
   */
  int getReceiverId();

  /**
   * <code>optional .snakes.GameMessage.PingMsg ping = 2;</code>
   */
  boolean hasPing();
  /**
   * <code>optional .snakes.GameMessage.PingMsg ping = 2;</code>
   */
  GameMessage.PingMsg getPing();
  /**
   * <code>optional .snakes.GameMessage.PingMsg ping = 2;</code>
   */
  GameMessage.PingMsgOrBuilder getPingOrBuilder();

  /**
   * <code>optional .snakes.GameMessage.SteerMsg steer = 3;</code>
   */
  boolean hasSteer();
  /**
   * <code>optional .snakes.GameMessage.SteerMsg steer = 3;</code>
   */
  GameMessage.SteerMsg getSteer();
  /**
   * <code>optional .snakes.GameMessage.SteerMsg steer = 3;</code>
   */
  GameMessage.SteerMsgOrBuilder getSteerOrBuilder();

  /**
   * <code>optional .snakes.GameMessage.AckMsg ack = 4;</code>
   */
  boolean hasAck();
  /**
   * <code>optional .snakes.GameMessage.AckMsg ack = 4;</code>
   */
  GameMessage.AckMsg getAck();
  /**
   * <code>optional .snakes.GameMessage.AckMsg ack = 4;</code>
   */
  GameMessage.AckMsgOrBuilder getAckOrBuilder();

  /**
   * <code>optional .snakes.GameMessage.StateMsg state = 5;</code>
   */
  boolean hasState();
  /**
   * <code>optional .snakes.GameMessage.StateMsg state = 5;</code>
   */
  GameMessage.StateMsg getState();
  /**
   * <code>optional .snakes.GameMessage.StateMsg state = 5;</code>
   */
  GameMessage.StateMsgOrBuilder getStateOrBuilder();

  /**
   * <code>optional .snakes.GameMessage.AnnouncementMsg announcement = 6;</code>
   */
  boolean hasAnnouncement();
  /**
   * <code>optional .snakes.GameMessage.AnnouncementMsg announcement = 6;</code>
   */
  GameMessage.AnnouncementMsg getAnnouncement();
  /**
   * <code>optional .snakes.GameMessage.AnnouncementMsg announcement = 6;</code>
   */
  GameMessage.AnnouncementMsgOrBuilder getAnnouncementOrBuilder();

  /**
   * <code>optional .snakes.GameMessage.JoinMsg join = 7;</code>
   */
  boolean hasJoin();
  /**
   * <code>optional .snakes.GameMessage.JoinMsg join = 7;</code>
   */
  GameMessage.JoinMsg getJoin();
  /**
   * <code>optional .snakes.GameMessage.JoinMsg join = 7;</code>
   */
  GameMessage.JoinMsgOrBuilder getJoinOrBuilder();

  /**
   * <code>optional .snakes.GameMessage.ErrorMsg error = 8;</code>
   */
  boolean hasError();
  /**
   * <code>optional .snakes.GameMessage.ErrorMsg error = 8;</code>
   */
  GameMessage.ErrorMsg getError();
  /**
   * <code>optional .snakes.GameMessage.ErrorMsg error = 8;</code>
   */
  GameMessage.ErrorMsgOrBuilder getErrorOrBuilder();

  /**
   * <code>optional .snakes.GameMessage.RoleChangeMsg role_change = 9;</code>
   */
  boolean hasRoleChange();
  /**
   * <code>optional .snakes.GameMessage.RoleChangeMsg role_change = 9;</code>
   */
  GameMessage.RoleChangeMsg getRoleChange();
  /**
   * <code>optional .snakes.GameMessage.RoleChangeMsg role_change = 9;</code>
   */
  GameMessage.RoleChangeMsgOrBuilder getRoleChangeOrBuilder();

  public GameMessage.TypeCase getTypeCase();
}
