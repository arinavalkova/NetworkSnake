package dto;// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: snakes.proto

/**
 * Protobuf type {@code snakes.GameConfig}
 */
public  final class GameConfig extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:snakes.GameConfig)
    GameConfigOrBuilder {
  // Use GameConfig.newBuilder() to construct.
  private GameConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private GameConfig() {
    width_ = 40;
    height_ = 30;
    foodStatic_ = 1;
    foodPerPlayer_ = 1F;
    stateDelayMs_ = 1000;
    deadFoodProb_ = 0.1F;
    pingDelayMs_ = 100;
    nodeTimeoutMs_ = 800;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private GameConfig(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownField(input, unknownFields,
                                   extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 8: {
            bitField0_ |= 0x00000001;
            width_ = input.readInt32();
            break;
          }
          case 16: {
            bitField0_ |= 0x00000002;
            height_ = input.readInt32();
            break;
          }
          case 24: {
            bitField0_ |= 0x00000004;
            foodStatic_ = input.readInt32();
            break;
          }
          case 37: {
            bitField0_ |= 0x00000008;
            foodPerPlayer_ = input.readFloat();
            break;
          }
          case 40: {
            bitField0_ |= 0x00000010;
            stateDelayMs_ = input.readInt32();
            break;
          }
          case 53: {
            bitField0_ |= 0x00000020;
            deadFoodProb_ = input.readFloat();
            break;
          }
          case 56: {
            bitField0_ |= 0x00000040;
            pingDelayMs_ = input.readInt32();
            break;
          }
          case 64: {
            bitField0_ |= 0x00000080;
            nodeTimeoutMs_ = input.readInt32();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return SnakesProto.internal_static_snakes_GameConfig_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return SnakesProto.internal_static_snakes_GameConfig_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            GameConfig.class, GameConfig.Builder.class);
  }

  private int bitField0_;
  public static final int WIDTH_FIELD_NUMBER = 1;
  private int width_;
  /**
   * <code>optional int32 width = 1 [default = 40];</code>
   */
  public boolean hasWidth() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <code>optional int32 width = 1 [default = 40];</code>
   */
  public int getWidth() {
    return width_;
  }

  public static final int HEIGHT_FIELD_NUMBER = 2;
  private int height_;
  /**
   * <code>optional int32 height = 2 [default = 30];</code>
   */
  public boolean hasHeight() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <code>optional int32 height = 2 [default = 30];</code>
   */
  public int getHeight() {
    return height_;
  }

  public static final int FOOD_STATIC_FIELD_NUMBER = 3;
  private int foodStatic_;
  /**
   * <code>optional int32 food_static = 3 [default = 1];</code>
   */
  public boolean hasFoodStatic() {
    return ((bitField0_ & 0x00000004) == 0x00000004);
  }
  /**
   * <code>optional int32 food_static = 3 [default = 1];</code>
   */
  public int getFoodStatic() {
    return foodStatic_;
  }

  public static final int FOOD_PER_PLAYER_FIELD_NUMBER = 4;
  private float foodPerPlayer_;
  /**
   * <code>optional float food_per_player = 4 [default = 1];</code>
   */
  public boolean hasFoodPerPlayer() {
    return ((bitField0_ & 0x00000008) == 0x00000008);
  }
  /**
   * <code>optional float food_per_player = 4 [default = 1];</code>
   */
  public float getFoodPerPlayer() {
    return foodPerPlayer_;
  }

  public static final int STATE_DELAY_MS_FIELD_NUMBER = 5;
  private int stateDelayMs_;
  /**
   * <code>optional int32 state_delay_ms = 5 [default = 1000];</code>
   */
  public boolean hasStateDelayMs() {
    return ((bitField0_ & 0x00000010) == 0x00000010);
  }
  /**
   * <code>optional int32 state_delay_ms = 5 [default = 1000];</code>
   */
  public int getStateDelayMs() {
    return stateDelayMs_;
  }

  public static final int DEAD_FOOD_PROB_FIELD_NUMBER = 6;
  private float deadFoodProb_;
  /**
   * <code>optional float dead_food_prob = 6 [default = 0.1];</code>
   */
  public boolean hasDeadFoodProb() {
    return ((bitField0_ & 0x00000020) == 0x00000020);
  }
  /**
   * <code>optional float dead_food_prob = 6 [default = 0.1];</code>
   */
  public float getDeadFoodProb() {
    return deadFoodProb_;
  }

  public static final int PING_DELAY_MS_FIELD_NUMBER = 7;
  private int pingDelayMs_;
  /**
   * <code>optional int32 ping_delay_ms = 7 [default = 100];</code>
   */
  public boolean hasPingDelayMs() {
    return ((bitField0_ & 0x00000040) == 0x00000040);
  }
  /**
   * <code>optional int32 ping_delay_ms = 7 [default = 100];</code>
   */
  public int getPingDelayMs() {
    return pingDelayMs_;
  }

  public static final int NODE_TIMEOUT_MS_FIELD_NUMBER = 8;
  private int nodeTimeoutMs_;
  /**
   * <code>optional int32 node_timeout_ms = 8 [default = 800];</code>
   */
  public boolean hasNodeTimeoutMs() {
    return ((bitField0_ & 0x00000080) == 0x00000080);
  }
  /**
   * <code>optional int32 node_timeout_ms = 8 [default = 800];</code>
   */
  public int getNodeTimeoutMs() {
    return nodeTimeoutMs_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeInt32(1, width_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeInt32(2, height_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      output.writeInt32(3, foodStatic_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      output.writeFloat(4, foodPerPlayer_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      output.writeInt32(5, stateDelayMs_);
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      output.writeFloat(6, deadFoodProb_);
    }
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      output.writeInt32(7, pingDelayMs_);
    }
    if (((bitField0_ & 0x00000080) == 0x00000080)) {
      output.writeInt32(8, nodeTimeoutMs_);
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, width_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, height_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, foodStatic_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(4, foodPerPlayer_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(5, stateDelayMs_);
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(6, deadFoodProb_);
    }
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(7, pingDelayMs_);
    }
    if (((bitField0_ & 0x00000080) == 0x00000080)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(8, nodeTimeoutMs_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof GameConfig)) {
      return super.equals(obj);
    }
    GameConfig other = (GameConfig) obj;

    boolean result = true;
    result = result && (hasWidth() == other.hasWidth());
    if (hasWidth()) {
      result = result && (getWidth()
          == other.getWidth());
    }
    result = result && (hasHeight() == other.hasHeight());
    if (hasHeight()) {
      result = result && (getHeight()
          == other.getHeight());
    }
    result = result && (hasFoodStatic() == other.hasFoodStatic());
    if (hasFoodStatic()) {
      result = result && (getFoodStatic()
          == other.getFoodStatic());
    }
    result = result && (hasFoodPerPlayer() == other.hasFoodPerPlayer());
    if (hasFoodPerPlayer()) {
      result = result && (
          java.lang.Float.floatToIntBits(getFoodPerPlayer())
          == java.lang.Float.floatToIntBits(
              other.getFoodPerPlayer()));
    }
    result = result && (hasStateDelayMs() == other.hasStateDelayMs());
    if (hasStateDelayMs()) {
      result = result && (getStateDelayMs()
          == other.getStateDelayMs());
    }
    result = result && (hasDeadFoodProb() == other.hasDeadFoodProb());
    if (hasDeadFoodProb()) {
      result = result && (
          java.lang.Float.floatToIntBits(getDeadFoodProb())
          == java.lang.Float.floatToIntBits(
              other.getDeadFoodProb()));
    }
    result = result && (hasPingDelayMs() == other.hasPingDelayMs());
    if (hasPingDelayMs()) {
      result = result && (getPingDelayMs()
          == other.getPingDelayMs());
    }
    result = result && (hasNodeTimeoutMs() == other.hasNodeTimeoutMs());
    if (hasNodeTimeoutMs()) {
      result = result && (getNodeTimeoutMs()
          == other.getNodeTimeoutMs());
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptorForType().hashCode();
    if (hasWidth()) {
      hash = (37 * hash) + WIDTH_FIELD_NUMBER;
      hash = (53 * hash) + getWidth();
    }
    if (hasHeight()) {
      hash = (37 * hash) + HEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + getHeight();
    }
    if (hasFoodStatic()) {
      hash = (37 * hash) + FOOD_STATIC_FIELD_NUMBER;
      hash = (53 * hash) + getFoodStatic();
    }
    if (hasFoodPerPlayer()) {
      hash = (37 * hash) + FOOD_PER_PLAYER_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getFoodPerPlayer());
    }
    if (hasStateDelayMs()) {
      hash = (37 * hash) + STATE_DELAY_MS_FIELD_NUMBER;
      hash = (53 * hash) + getStateDelayMs();
    }
    if (hasDeadFoodProb()) {
      hash = (37 * hash) + DEAD_FOOD_PROB_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getDeadFoodProb());
    }
    if (hasPingDelayMs()) {
      hash = (37 * hash) + PING_DELAY_MS_FIELD_NUMBER;
      hash = (53 * hash) + getPingDelayMs();
    }
    if (hasNodeTimeoutMs()) {
      hash = (37 * hash) + NODE_TIMEOUT_MS_FIELD_NUMBER;
      hash = (53 * hash) + getNodeTimeoutMs();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static GameConfig parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static GameConfig parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static GameConfig parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static GameConfig parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static GameConfig parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static GameConfig parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static GameConfig parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static GameConfig parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static GameConfig parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static GameConfig parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(GameConfig prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code snakes.GameConfig}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:snakes.GameConfig)
      GameConfigOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SnakesProto.internal_static_snakes_GameConfig_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SnakesProto.internal_static_snakes_GameConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              GameConfig.class, GameConfig.Builder.class);
    }

    // Construct using GameConfig.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      width_ = 40;
      bitField0_ = (bitField0_ & ~0x00000001);
      height_ = 30;
      bitField0_ = (bitField0_ & ~0x00000002);
      foodStatic_ = 1;
      bitField0_ = (bitField0_ & ~0x00000004);
      foodPerPlayer_ = 1F;
      bitField0_ = (bitField0_ & ~0x00000008);
      stateDelayMs_ = 1000;
      bitField0_ = (bitField0_ & ~0x00000010);
      deadFoodProb_ = 0.1F;
      bitField0_ = (bitField0_ & ~0x00000020);
      pingDelayMs_ = 100;
      bitField0_ = (bitField0_ & ~0x00000040);
      nodeTimeoutMs_ = 800;
      bitField0_ = (bitField0_ & ~0x00000080);
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return SnakesProto.internal_static_snakes_GameConfig_descriptor;
    }

    public GameConfig getDefaultInstanceForType() {
      return GameConfig.getDefaultInstance();
    }

    public GameConfig build() {
      GameConfig result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public GameConfig buildPartial() {
      GameConfig result = new GameConfig(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
        to_bitField0_ |= 0x00000001;
      }
      result.width_ = width_;
      if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
        to_bitField0_ |= 0x00000002;
      }
      result.height_ = height_;
      if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
        to_bitField0_ |= 0x00000004;
      }
      result.foodStatic_ = foodStatic_;
      if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
        to_bitField0_ |= 0x00000008;
      }
      result.foodPerPlayer_ = foodPerPlayer_;
      if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
        to_bitField0_ |= 0x00000010;
      }
      result.stateDelayMs_ = stateDelayMs_;
      if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
        to_bitField0_ |= 0x00000020;
      }
      result.deadFoodProb_ = deadFoodProb_;
      if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
        to_bitField0_ |= 0x00000040;
      }
      result.pingDelayMs_ = pingDelayMs_;
      if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
        to_bitField0_ |= 0x00000080;
      }
      result.nodeTimeoutMs_ = nodeTimeoutMs_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof GameConfig) {
        return mergeFrom((GameConfig)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(GameConfig other) {
      if (other == GameConfig.getDefaultInstance()) return this;
      if (other.hasWidth()) {
        setWidth(other.getWidth());
      }
      if (other.hasHeight()) {
        setHeight(other.getHeight());
      }
      if (other.hasFoodStatic()) {
        setFoodStatic(other.getFoodStatic());
      }
      if (other.hasFoodPerPlayer()) {
        setFoodPerPlayer(other.getFoodPerPlayer());
      }
      if (other.hasStateDelayMs()) {
        setStateDelayMs(other.getStateDelayMs());
      }
      if (other.hasDeadFoodProb()) {
        setDeadFoodProb(other.getDeadFoodProb());
      }
      if (other.hasPingDelayMs()) {
        setPingDelayMs(other.getPingDelayMs());
      }
      if (other.hasNodeTimeoutMs()) {
        setNodeTimeoutMs(other.getNodeTimeoutMs());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      GameConfig parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (GameConfig) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private int width_ = 40;
    /**
     * <code>optional int32 width = 1 [default = 40];</code>
     */
    public boolean hasWidth() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 width = 1 [default = 40];</code>
     */
    public int getWidth() {
      return width_;
    }
    /**
     * <code>optional int32 width = 1 [default = 40];</code>
     */
    public Builder setWidth(int value) {
      bitField0_ |= 0x00000001;
      width_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int32 width = 1 [default = 40];</code>
     */
    public Builder clearWidth() {
      bitField0_ = (bitField0_ & ~0x00000001);
      width_ = 40;
      onChanged();
      return this;
    }

    private int height_ = 30;
    /**
     * <code>optional int32 height = 2 [default = 30];</code>
     */
    public boolean hasHeight() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 height = 2 [default = 30];</code>
     */
    public int getHeight() {
      return height_;
    }
    /**
     * <code>optional int32 height = 2 [default = 30];</code>
     */
    public Builder setHeight(int value) {
      bitField0_ |= 0x00000002;
      height_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int32 height = 2 [default = 30];</code>
     */
    public Builder clearHeight() {
      bitField0_ = (bitField0_ & ~0x00000002);
      height_ = 30;
      onChanged();
      return this;
    }

    private int foodStatic_ = 1;
    /**
     * <code>optional int32 food_static = 3 [default = 1];</code>
     */
    public boolean hasFoodStatic() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 food_static = 3 [default = 1];</code>
     */
    public int getFoodStatic() {
      return foodStatic_;
    }
    /**
     * <code>optional int32 food_static = 3 [default = 1];</code>
     */
    public Builder setFoodStatic(int value) {
      bitField0_ |= 0x00000004;
      foodStatic_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int32 food_static = 3 [default = 1];</code>
     */
    public Builder clearFoodStatic() {
      bitField0_ = (bitField0_ & ~0x00000004);
      foodStatic_ = 1;
      onChanged();
      return this;
    }

    private float foodPerPlayer_ = 1F;
    /**
     * <code>optional float food_per_player = 4 [default = 1];</code>
     */
    public boolean hasFoodPerPlayer() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional float food_per_player = 4 [default = 1];</code>
     */
    public float getFoodPerPlayer() {
      return foodPerPlayer_;
    }
    /**
     * <code>optional float food_per_player = 4 [default = 1];</code>
     */
    public Builder setFoodPerPlayer(float value) {
      bitField0_ |= 0x00000008;
      foodPerPlayer_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional float food_per_player = 4 [default = 1];</code>
     */
    public Builder clearFoodPerPlayer() {
      bitField0_ = (bitField0_ & ~0x00000008);
      foodPerPlayer_ = 1F;
      onChanged();
      return this;
    }

    private int stateDelayMs_ = 1000;
    /**
     * <code>optional int32 state_delay_ms = 5 [default = 1000];</code>
     */
    public boolean hasStateDelayMs() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 state_delay_ms = 5 [default = 1000];</code>
     */
    public int getStateDelayMs() {
      return stateDelayMs_;
    }
    /**
     * <code>optional int32 state_delay_ms = 5 [default = 1000];</code>
     */
    public Builder setStateDelayMs(int value) {
      bitField0_ |= 0x00000010;
      stateDelayMs_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int32 state_delay_ms = 5 [default = 1000];</code>
     */
    public Builder clearStateDelayMs() {
      bitField0_ = (bitField0_ & ~0x00000010);
      stateDelayMs_ = 1000;
      onChanged();
      return this;
    }

    private float deadFoodProb_ = 0.1F;
    /**
     * <code>optional float dead_food_prob = 6 [default = 0.1];</code>
     */
    public boolean hasDeadFoodProb() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional float dead_food_prob = 6 [default = 0.1];</code>
     */
    public float getDeadFoodProb() {
      return deadFoodProb_;
    }
    /**
     * <code>optional float dead_food_prob = 6 [default = 0.1];</code>
     */
    public Builder setDeadFoodProb(float value) {
      bitField0_ |= 0x00000020;
      deadFoodProb_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional float dead_food_prob = 6 [default = 0.1];</code>
     */
    public Builder clearDeadFoodProb() {
      bitField0_ = (bitField0_ & ~0x00000020);
      deadFoodProb_ = 0.1F;
      onChanged();
      return this;
    }

    private int pingDelayMs_ = 100;
    /**
     * <code>optional int32 ping_delay_ms = 7 [default = 100];</code>
     */
    public boolean hasPingDelayMs() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 ping_delay_ms = 7 [default = 100];</code>
     */
    public int getPingDelayMs() {
      return pingDelayMs_;
    }
    /**
     * <code>optional int32 ping_delay_ms = 7 [default = 100];</code>
     */
    public Builder setPingDelayMs(int value) {
      bitField0_ |= 0x00000040;
      pingDelayMs_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int32 ping_delay_ms = 7 [default = 100];</code>
     */
    public Builder clearPingDelayMs() {
      bitField0_ = (bitField0_ & ~0x00000040);
      pingDelayMs_ = 100;
      onChanged();
      return this;
    }

    private int nodeTimeoutMs_ = 800;
    /**
     * <code>optional int32 node_timeout_ms = 8 [default = 800];</code>
     */
    public boolean hasNodeTimeoutMs() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 node_timeout_ms = 8 [default = 800];</code>
     */
    public int getNodeTimeoutMs() {
      return nodeTimeoutMs_;
    }
    /**
     * <code>optional int32 node_timeout_ms = 8 [default = 800];</code>
     */
    public Builder setNodeTimeoutMs(int value) {
      bitField0_ |= 0x00000080;
      nodeTimeoutMs_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int32 node_timeout_ms = 8 [default = 800];</code>
     */
    public Builder clearNodeTimeoutMs() {
      bitField0_ = (bitField0_ & ~0x00000080);
      nodeTimeoutMs_ = 800;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:snakes.GameConfig)
  }

  // @@protoc_insertion_point(class_scope:snakes.GameConfig)
  private static final GameConfig DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new GameConfig();
  }

  public static GameConfig getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<GameConfig>
      PARSER = new com.google.protobuf.AbstractParser<GameConfig>() {
    public GameConfig parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameConfig(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<GameConfig> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<GameConfig> getParserForType() {
    return PARSER;
  }

  public GameConfig getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

